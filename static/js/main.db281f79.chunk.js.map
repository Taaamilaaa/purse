{"version":3,"sources":["components/MainInfo/MainInfo.jsx","components/StatisticsBtns/StatisticsBtns.jsx","components/_pages/MainPage.jsx","components/_share/GoBackHeader/GoBackHeader.jsx","components/_share/LabelInput/LabelInput.jsx","components/_share/Form/Form.jsx","components/assets/options/transactionFormOptions.js","components/_pages/TransactionPage.jsx","components/_pages/BalancePage.jsx","components/App/App.jsx","index.js"],"names":["MainInfo","title","currency","options","openActivePage","activePage","map","period","sum","name","onClick","type","StatisticsBtns","MainPage","mainInfoCosts","mainInfoIncomes","mainInfoBalance","GoBackHeader","handelGoBack","LabelInput","value","placeholder","cbOnChange","onChange","Form","cbOnSubmit","formOptions","dataForm","handleChange","onSubmit","e","preventDefault","option","TransactionPage","closeActivePage","transType","addTransaction","useState","date","time","category","comment","form","setForm","transaction","id","shortid","generate","transactionFormOptions","target","console","log","prevForm","BalancePage","transactions","App","setActivePage","costs","setCosts","incomes","setIncomes","prevCosts","prevIncomes","toggleActivePage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNACaA,EAAW,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,MAAkE,IAA3DC,gBAA2D,MAAhD,MAAgD,EAAzCC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,eAAgBC,EAAgB,EAAhBA,WAEzE,OACI,oCACI,6BAAKJ,IACL,4BAAIC,IACJ,6BACKC,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,IAAKC,EAAhB,EAAgBA,KAAhB,OACZ,+BACG,+BAAOF,IACP,+BAAOC,MAFDC,QAMd,wBAAQC,QAbI,kBAAKN,EAAeC,IAaFM,KAAO,SAArC,qBCfCC,EAAiB,WAC1B,OACI,qCACI,wBAAQD,KAAM,SAAd,2EACA,wBAAQA,KAAM,SAAd,yE,OCcGE,EAdE,SAAC,GAAsB,IAArBT,EAAoB,EAApBA,eACf,OACI,oCACC,iDACG,cAAC,EAAD,CAAUC,WAAa,QAAQD,eAAkBA,EAAgBD,QAAWW,IAAgBb,MAAQ,WACpG,cAAC,EAAD,CAAUI,WAAa,UAAUD,eAAkBA,EAAgBD,QAAWY,IAAiBd,MAAQ,YACvG,cAAC,EAAD,CAAUI,WAAa,UAAUD,eAAkBA,EAAgBD,QAAWa,IAAkBf,MAAM,YACrG,cAAC,EAAD,Q,cCXAgB,EAAe,SAAC,GAA6B,IAA3BhB,EAA0B,EAA1BA,MAAOiB,EAAmB,EAAnBA,aAElC,OACI,mCACI,wBAAQR,QAHE,kBAAMQ,KAGcP,KAAK,SAAnC,qBACA,6BAAKV,Q,iBCLJkB,EAAa,SAAC,GAOpB,IANLlB,EAMI,EANJA,MAMI,IALJU,YAKI,MALG,OAKH,EAJJF,EAII,EAJJA,KACAW,EAGI,EAHJA,MAGI,IAFJC,mBAEI,MAFU,KAEV,EADJC,EACI,EADJA,WAEA,OACE,kCACGrB,GAAS,4BAAIA,IACd,uBACEU,KAAMA,EACNF,KAAMA,EACNW,MAAOA,EACPC,YAAaA,EACbE,SAAUD,QCMHE,EApBF,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAKjD,OACE,uBAAMC,SALa,SAACC,GACpBA,EAAEC,iBACFN,KAGA,UACE,wBAAQd,KAAK,SAAb,gBACCe,EAAYpB,KAAI,SAAC0B,GAAD,OACf,cAAC,EAAD,2BAEMA,GAFN,IAGEZ,MAAOO,EAASK,EAAOvB,MACvBa,WAAYM,IAHPI,EAAOvB,aCZP,GACb,CACER,MAAO,OACPU,KAAM,OACNF,KAAM,QAER,CACER,MAAO,OACPU,KAAM,OACNF,KAAM,QAER,CACER,MAAO,WACPU,KAAM,SACNF,KAAM,YAER,CACER,MAAO,MACPU,KAAM,SACNF,KAAM,MACNY,YAAa,iBAEf,CACEpB,MAAO,WACPU,KAAM,SACNF,KAAM,YAER,CACER,MAAO,UACPQ,KAAM,UACNY,YAAa,YCvBJY,EAAkB,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,gBAAiBC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,eAC3D,EAAwBC,mBAAS,CAChCC,KAAM,GACNC,KAAM,GACNC,SAAwB,YAAdL,EAA0B,SAAW,qBAC/C3B,IAAK,GACLN,SAAU,MACVuC,QAAS,KANV,mBAAOC,EAAP,KAAaC,EAAb,KAsBD,OACE,oCACE,cAAC,EAAD,CAAc1C,MAAqB,UAAdkC,EAAwB,QAAQ,UAAWjB,aAAcgB,IAC7E,cAAC,EAAD,CACCT,WAZiB,WACrBW,EAAe,CACbQ,YAAY,2BAAMF,GAAP,IAAaG,GAAIC,IAAQC,aACpCZ,cAEFD,KAQIP,SAAUe,EACVhB,YAAasB,EACbpB,aApBiB,SAAAE,GACjB,MAAwBA,EAAEmB,OAAlBxC,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd8B,QAAQC,IAAI1C,EAAMW,GACnBuB,GAAQ,SAACS,GAAD,mBAAC,eAAmBA,GAApB,kBAA+B3C,EAAOW,cClBxCiC,EAAc,SAAC,GAAuC,IAArCnB,EAAoC,EAApCA,gBAAiBoB,EAAmB,EAAnBA,aAE7C,OADEJ,QAAQC,IAAIG,GAEZ,qCACE,cAAC,EAAD,CACEpC,aAAcgB,EACdjC,MAAM,yBAEJ,6BACKqD,EAAahD,KAAI,SAAAsC,GACdM,QAAQC,IAAIP,GACZ,IAAQN,EAA2BM,EAA3BN,KAAME,EAAqBI,EAArBJ,SAAUhC,EAAWoC,EAAXpC,IAAKqC,EAAMD,EAANC,GAC7B,OACC,+BACT,+BAAOP,IACP,+BAAOE,IACP,+BAAOhC,MAHaqC,Y,MCqBfU,MA7Bf,WACE,MAAoClB,mBAAS,IAA7C,mBAAOhC,EAAP,KAAmBmD,EAAnB,KACA,EAA0BnB,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAA8BrB,mBAAS,IAAvC,mBAAOsB,EAAP,KAAgBC,EAAhB,KAGMxB,EAAiB,SAACQ,EAAaT,GACjB,UAAdA,IACFuB,GAAS,SAAAG,GAAe,MAAM,GAAN,mBAAWA,GAAX,YAAyBjB,OAC/B,YAAdT,GACFyB,GAAW,SAAAE,GAAiB,MAAM,GAAN,mBAAWA,GAAX,YAA2BlB,SAIvDmB,EAAmB,WAAsB,IAArB1D,EAAoB,uDAAP,GACrCmD,EAAcnD,IAEhB,OAAQA,GACN,IAAK,QAEL,IAAK,UACH,OAAO,cAAC,EAAD,CAAiB+B,eAAkBA,EAAgBF,gBAAmB6B,EAAkB5B,UAAW9B,IAC5G,IAAK,UACH,OAAO,cAAC,EAAD,CAAaiD,aAAY,sBAAQG,GAAR,YAAkBE,IAAUzB,gBAAmB6B,IACjF,QACE,OAAO,cAAC,EAAD,CAAU3D,eAAgB2D,MC3BvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.db281f79.chunk.js","sourcesContent":["\r\nexport const MainInfo = ({ title, currency = \"USD\", options, openActivePage, activePage}) => {\r\n    const handleClick = ()=> openActivePage(activePage)\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            <p>{currency}</p>\r\n            <ul>\r\n                {options.map(({ period, sum, name }) => \r\n                (<li key={name}>\r\n                    <span>{period}</span>\r\n                    <span>{sum}</span>\r\n                 </li> )  \r\n                )}\r\n            </ul>\r\n            <button onClick={handleClick} type = \"button\">Add</button>\r\n    </section>\r\n)\r\n}","export const StatisticsBtns = () => {\r\n    return (\r\n        <>\r\n            <button type =\"button\">Все расходы</button>\r\n            <button type =\"button\">Все доходы</button>\r\n        </>\r\n    )\r\n}","import { MainInfo } from \"../MainInfo/MainInfo\"\r\nimport { StatisticsBtns } from \"../StatisticsBtns/StatisticsBtns\" \r\nimport {mainInfoCosts, mainInfoIncomes, mainInfoBalance } from \"../assets/data/mainInfoOptions.json\"\r\n\r\nconst MainPage = ({openActivePage}) => {\r\n    return (\r\n        <section>\r\n         <h1>Expense journal</h1>\r\n            <MainInfo activePage = \"costs\" openActivePage = {openActivePage} options = {mainInfoCosts } title = \"Coasts\"/>\r\n            <MainInfo activePage = \"incomes\" openActivePage = {openActivePage} options = {mainInfoIncomes} title = \"Incomes\"/>\r\n            <MainInfo activePage = \"balance\" openActivePage = {openActivePage} options = {mainInfoBalance } title=\"Balance\" />\r\n             <StatisticsBtns/>\r\n        </section>\r\n       \r\n       \r\n    )\r\n}\r\n\r\nexport default MainPage","export const GoBackHeader = ({ title, handelGoBack }) => {\r\n    const cbOnClick = () => handelGoBack();\r\n    return (\r\n        <header>\r\n            <button onClick = {cbOnClick} type=\"button\">Go back</button>\r\n            <h2>{title}</h2>         \r\n        </header>\r\n    )\r\n}","export const LabelInput = ({\r\n  title,\r\n  type = \"text\",\r\n  name,\r\n  value,\r\n  placeholder = null,\r\n  cbOnChange,\r\n}) => {\r\n  return (\r\n    <label>\r\n      {title && <p>{title}</p>}\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={cbOnChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n","import { LabelInput } from \"../LabelInput/LabelInput\";\r\n\r\nconst Form = ({ cbOnSubmit, formOptions, dataForm, handleChange }) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    cbOnSubmit();\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <button type=\"submit\">Ok</button>\r\n      {formOptions.map((option) => (\r\n        <LabelInput\r\n          key={option.name}\r\n          {...option}\r\n          value={dataForm[option.name]}\r\n          cbOnChange={handleChange}\r\n        />\r\n      ))}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","export default [\r\n  {\r\n    title: \"Date\",\r\n    type: \"date\",\r\n    name: \"date\",\r\n  },\r\n  {\r\n    title: \"Time\",\r\n    type: \"time\",\r\n    name: \"time\",\r\n  },\r\n  {\r\n    title: \"Category\",\r\n    type: \"button\",\r\n    name: \"category\",\r\n  },\r\n  {\r\n    title: \"Sum\",\r\n    type: \"number\",\r\n    name: \"sum\",\r\n    placeholder: \"Enter the sum\",\r\n  },\r\n  {\r\n    title: \"Currency\",\r\n    type: \"button\",\r\n    name: \"currency\",\r\n  },\r\n  {\r\n    title: \"Comment\",\r\n    name: \"comment\",\r\n    placeholder: \"Comment\",\r\n  },\r\n];","import { useState } from \"react\";\r\nimport { GoBackHeader } from \"../_share/GoBackHeader/GoBackHeader\";\r\n// import { LabelInput } from \"../_share/LabelInput/LabelInput\";\r\nimport shortid from 'shortid';\r\nimport Form from \"../_share/Form/Form\";\r\nimport transactionFormOptions from \"../assets/options/transactionFormOptions\";\r\n\r\nexport const TransactionPage = ({ closeActivePage, transType, addTransaction }) => {\r\n   const [form, setForm] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    category: transType === \"incomes\" ? \"Salary\" : \"Еда\",\r\n    sum: \"\",\r\n    currency: \"USD\",\r\n    comment: \"\",\r\n  });\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        console.log(name, value);\r\n       setForm((prevForm) => ({ ...prevForm, [name]: value }));        \r\n    };\r\n    const handleSubmit = () => {\r\n    addTransaction({\r\n      transaction: { ...form, id: shortid.generate() },\r\n      transType,\r\n    });\r\n    closeActivePage();\r\n  };\r\n    \r\n  return (\r\n    <section>\r\n      <GoBackHeader title={transType === \"costs\" ? \"Costs\":\"Incomes\"} handelGoBack={closeActivePage} />\r\n       <Form\r\n        cbOnSubmit={handleSubmit}\r\n        dataForm={form}\r\n        formOptions={transactionFormOptions}\r\n        handleChange={handleChange}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n","import { GoBackHeader } from \"../_share/GoBackHeader/GoBackHeader\";\r\n\r\nexport const BalancePage = ({ closeActivePage, transactions }) => {\r\n    console.log(transactions);\r\n  return (\r\n    <>\r\n      <GoBackHeader\r\n        handelGoBack={closeActivePage}\r\n        title=\"balance for the year\"\r\n      />\r\n          <ul>\r\n              {transactions.map(transaction => {\r\n                  console.log(transaction);\r\n                  const { date, category, sum, id} = transaction;\r\n                  return (\r\n                   <li key = {id}>\r\n          <span>{date}</span>\r\n          <span>{category}</span>\r\n          <span>{sum}</span>\r\n        </li>\r\n               )   \r\n              })}\r\n        \r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\";\nimport MainPage from \"../_pages/MainPage\";\nimport { TransactionPage } from \"../_pages/TransactionPage\";\nimport { BalancePage } from \"../_pages/BalancePage\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [activePage, setActivePage] = useState(\"\");\n  const [costs, setCosts] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  \n\n  const addTransaction = (transaction, transType) => {\n    if (transType === 'costs') {\n      setCosts(prevCosts => { return [...prevCosts, ...transaction] });\n      if (transType === 'incomes') {\n        setIncomes(prevIncomes => { return [...prevIncomes, ...transaction] });\n      };\n    };\n  };\n  const toggleActivePage = (activePage = \"\") => {\n    setActivePage(activePage);\n  };\n  switch (activePage) {\n    case \"costs\":\n      return <TransactionPage addTransaction = {addTransaction} closeActivePage = {toggleActivePage} transType={activePage} />;\n    case \"incomes\":\n      return <TransactionPage addTransaction = {addTransaction} closeActivePage = {toggleActivePage} transType={activePage} />;\n    case \"balance\":\n      return <BalancePage transactions = {[...costs, ...incomes]} closeActivePage = {toggleActivePage} />;\n    default:\n      return <MainPage openActivePage={toggleActivePage} />;\n    };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}